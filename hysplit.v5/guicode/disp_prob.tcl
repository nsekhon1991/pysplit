proc prob_plot {} {

#-----------------------------------------------------------------------------
# PROB_DISP.TCL: gridded concentration probability display from ensemble
# Last Revised: 06 Feb 2002
#               13 Aug 2002
#               26 Sep 2002
#               17 Jun 2003
#               06 Nov 2003
#               21 Sep 2004 - do not destroy widget after display
#               25 Oct 2004 - global postscript file name
#               10 Jan 2005 - revised xterm link
#               01 Jun 2005 - cnum contour argument to default
#               18 May 2006 - expanded options
#               06 Dec 2007 - revised probabilities for box plots
#               09 Jan 2009 - concplot command line argument -:
#               23 Mar 2009 - error trap concplot
#               13 Aug 2009 - browse button for map background file
#               07 Apr 2011 - slight argument rearrangement conprob for MAC
#               12 Sep 2016 - fixed browse button for shapefiles.txt
#               07 Nov 2016 - do not permit shapefile copy to itself
#               28 Jul 2017 - use Ptype for initialization
#               13 Dec 2019 - replace concplot and concplot.exe with concplot.py
#               17 Jan 2020 - add option to use FORTRAN or Python trajplot.
#               03 Sep 2020 - moved call to conprob to its own menu
#-----------------------------------------------------------------------------

global html_dir Zoom Color Ptype 
global Psout_file Map_file Map_proj Frame Igis View 
global PyDebug PySource_time_zone PyStreet_map PyOutput_format
global PyPreferred

if [winfo exists .probdisp] {destroy .probdisp}
set wr .probdisp
toplevel $wr
wm title $wr " Ensemble Probability Display   "
wm  geometry $wr +100+75

frame $wr.top 
frame $wr.mid1
frame $wr.mid2
frame $wr.mid3
frame $wr.mid6
frame $wr.mid4
frame $wr.mid7
frame $wr.mid8
frame $wr.mid5
frame $wr.bot

ttk::notebook $wr.lang
frame $wr.lang.py
frame $wr.lang.f
$wr.lang add $wr.lang.f -text "Fortran"
$wr.lang add $wr.lang.py -text "Python"

pack $wr.top -side top -pady 5 -padx 5
pack $wr.mid1 $wr.mid2 $wr.mid3 -pady 5
pack $wr.mid4 
pack $wr.mid7 
pack $wr.mid8 
pack $wr.mid5 
pack $wr.mid6 $wr.lang $wr.bot -pady 10
pack configure $wr.lang -expand true -fill x -padx 60

#-->description

label $wr.top.lab -fg blue -relief raised -justify left -wraplength 7i \
 -text "Create various maps from the probability files generated by the\
Display/Ensemble/Create Files tab which converted the individual ensemble\
member concentration output files to means, medians, variance, and\
probability of exceeding certain concentration levels."
pack $wr.top.lab

#-->output postscript file

label $wr.mid1.lab -text "   Output File: "
entry $wr.mid1.ent -textvariable Psout_file -relief sunken -width 15
checkbutton $wr.mid1.box -variable Frame -text "Frames" -background grey
checkbutton $wr.mid1.gis -variable Igis -text "GIS" -background grey
checkbutton $wr.mid1.kol -variable Color -text Color -background grey
pack $wr.mid1.lab $wr.mid1.ent $wr.mid1.box $wr.mid1.gis \
      $wr.mid1.kol -side left -padx 5 

#-->map background file

label $wr.mid2.lab -text "Map Background:   "
entry $wr.mid2.ent -textvariable Map_file -relief sunken -width 40
button $wr.mid2.win  -text Browse -width 8 -command {
   set temp [tk_getOpenFile -title "File Selection"]
   if {[string length $temp] > 0} {
      set cshp [string last shapefiles $temp]
      if {$cshp > 0} {
         if {[file dirname $temp] != [pwd]} {file copy -force $temp .}
         set Map_file [string range $temp $cshp end]
      } else {
         set Map_file $temp
      }
   }
}
pack $wr.mid2.lab $wr.mid2.ent $wr.mid2.win -side left -padx 5

#-->map projection options

label $wr.mid3.lab -text "   Projection: "
radiobutton $wr.mid3.d0 -text "Auto"     -variable Map_proj -value "0" 
radiobutton $wr.mid3.d1 -text "Polar"    -variable Map_proj -value "1" 
radiobutton $wr.mid3.d2 -text "Lambert"  -variable Map_proj -value "2" 
radiobutton $wr.mid3.d3 -text "Mercator" -variable Map_proj -value "3" 
pack $wr.mid3.lab -side left -padx 10
pack $wr.mid3.d0 $wr.mid3.d1 $wr.mid3.d2 $wr.mid3.d3 -side left

#-->output selection type

label $wr.mid4.lab -text "__________________________________________________________"
pack  $wr.mid4.lab 

label $wr.mid7.lab -fg blue -text "Output Selection Options"
pack  $wr.mid7.lab -side top -pady 5 

radiobutton $wr.mid7.d0 -text "Number >0 " -variable Ptype -value "0"
radiobutton $wr.mid7.d1 -text "Mean  "     -variable Ptype -value "1"
radiobutton $wr.mid7.d2 -text "Variance  " -variable Ptype -value "2"
radiobutton $wr.mid7.d3 -text "Coef of Variation " -variable Ptype -value "3"
pack $wr.mid7.d0 $wr.mid7.d1 $wr.mid7.d2 $wr.mid7.d3  -side left 

frame $wr.mid8.lft 
frame $wr.mid8.rgt 
pack $wr.mid8.lft $wr.mid8.rgt -side left -padx 15

label $wr.mid8.lft.lab1 -text "Probability of Concentration"
pack  $wr.mid8.lft.lab1 -side top
radiobutton $wr.mid8.lft.d4 -text " 1%" -variable Ptype -value "4" 
radiobutton $wr.mid8.lft.d5 -text "10%" -variable Ptype -value "5" 
radiobutton $wr.mid8.lft.d6 -text "Max" -variable Ptype -value "6"
pack $wr.mid8.lft.d4 $wr.mid8.lft.d5 $wr.mid8.lft.d6 -side left

label $wr.mid8.rgt.lab -text "Concentration at Percentile"
pack $wr.mid8.rgt.lab -side top
radiobutton $wr.mid8.rgt.d7 -text "50%" -variable Ptype -value "7" 
radiobutton $wr.mid8.rgt.d8 -text "75%" -variable Ptype -value "8" 
radiobutton $wr.mid8.rgt.d9 -text "90%" -variable Ptype -value "9" 
radiobutton $wr.mid8.rgt.d10 -text "95%" -variable Ptype -value "10" 
pack $wr.mid8.rgt.d7 $wr.mid8.rgt.d8 $wr.mid8.rgt.d9 $wr.mid8.rgt.d10 -side left

label $wr.mid5.lab -text "__________________________________________________________"
pack  $wr.mid5.lab 

#-->zoom factor slider bar

label $wr.mid6.lab -text "Least Zoom -------------------> Most Zoom"
scale $wr.mid6.d0 -orient horizontal -length 400 -from 0 -to 100 \
  -tickinterval 10 -variable Zoom -resolution 5 
pack $wr.mid6.lab $wr.mid6.d0 -side top -pady 3

#-->Python options
label $wr.lang.f.lab -text "Output will be in Postscript"
pack $wr.lang.f.lab -expand true

frame $wr.lang.py.out_format
label $wr.lang.py.out_format.lab -text "Output Format:"
ttk::combobox $wr.lang.py.out_format.cb -textvariable PyOutput_format \
    -values [list pdf ps jpg png svg tif] -width 5 -state readonly
$wr.lang.py.out_format.cb set pdf
pack $wr.lang.py.out_format.lab $wr.lang.py.out_format.cb -side left -padx 5 -fill x

frame $wr.lang.py.street_map
label $wr.lang.py.street_map.lab -text "Street Map:"
ttk::combobox $wr.lang.py.street_map.cb -textvariable PyStreet_map \
    -values [list "NOT_USED" STAMEN_TERRAIN STAMEN_TONER] -width 15 -state readonly
$wr.lang.py.street_map.cb set "NOT_USED"
pack $wr.lang.py.street_map.lab $wr.lang.py.street_map.cb -side left -padx 5 -fill x

frame $wr.lang.py.misc
checkbutton $wr.lang.py.misc.source_tz -variable PySource_time_zone -text "Source time zone" -background grey
checkbutton $wr.lang.py.misc.debug -variable PyDebug -text "Debug messages" -background grey
pack $wr.lang.py.misc.source_tz $wr.lang.py.misc.debug -side left -padx 5

pack $wr.lang.py.out_format $wr.lang.py.street_map $wr.lang.py.misc -side top -pady 5 -padx 10

if { $PyPreferred } {
    $wr.lang select $wr.lang.py
} else {
    $wr.lang select $wr.lang.f
}

#-->bottom action buttons

button $wr.bot.dismiss  -bg red -text Quit -width 12 -command "destroy $wr"
button $wr.bot.help -text Help -width 8 \
       -command "load_html [file join $html_dir S334.htm ] "
button $wr.bot.save  -bg green -text "Execute Display " -width 24 -command {run_prob_plot ".probdisp.lang"}
pack  $wr.bot.dismiss $wr.bot.help $wr.bot.save -side left -padx 10 
set_defaultp
}

#------------------------------------------------------------------------------
# run plotting program

proc run_prob_plot {lang} {

global exec_dir Zoom Color Ptype 
global X_dir tcl_platform Psout_file Map_file Map_proj Frame Igis View 
global PyPreferred
global PyDebug PySource_time_zone PyStreet_map PyOutput_format

set PyPreferred [expr {[$lang select] == "${lang}.py"}]

if { $PyPreferred } {
    set out_file ${Psout_file}.${PyOutput_format}
} else {
    set out_file ${Psout_file}.ps
}

if [file exists $out_file] {file delete -force $out_file}

set f [open "LABELS.CFG" w]
if { $Ptype == 0} {
   puts $f "'TITLE&','Number of Ensemble Members&'"
   puts $f "'MAPID&','Frequency &'"
   puts $f "'UNITS&','Count &'"
   puts $f "'VOLUM&',' &'"
   }
if { $Ptype == 1} {
   puts $f "'TITLE&','Ensemble Mean Concentration&'"
   puts $f "'MAPID&','Mean &'"
   puts $f "'UNITS&','Mass &'"
   }
if { $Ptype == 2} {
   puts $f "'TITLE&','Ensemble Concentration Variance&'"
   puts $f "'MAPID&','Variance &'"
   puts $f "'UNITS&','C**2 &'"
   }
if { $Ptype == 3} {
   puts $f "'TITLE&','Ensemble Coeffient of Variation&'"
   puts $f "'MAPID&','Coef Variation &'"
   puts $f "'UNITS&','% &'"
   }
if { $Ptype == 4 || $Ptype == 5 || $Ptype == 6 } {
   puts $f "'TITLE&','Probablility of Exceeding a Concentration&'"
   puts $f "'MAPID&','Probability &'"
   puts $f "'UNITS&',' % &'"
   puts $f "'VOLUM&',' &'"
   }
if { $Ptype == 7 || $Ptype == 8 || $Ptype == 9 || $Ptype == 10 } {
   puts $f "'TITLE&','Concentrations at a Percentile Level&'"
   puts $f "'MAPID&','Air Concentration &'"
   }
close $f

set arg0 "-:" ; set arg2 "-:" ; set arg3 -i  
if { $Ptype == 0 } {append arg3 cnumb   ; set arg0 "-c4" ; set arg2 "-v10+5+2+1"}
if { $Ptype == 1 } {append arg3 cmean}
if { $Ptype == 2 } {append arg3 cvarn}
if { $Ptype == 3 } {append arg3 ccoev}
if { $Ptype == 4 } {append arg3 cmax01  ; set arg0 "-c4" ; set arg2 "-v50+25+10+5"}
if { $Ptype == 5 } {append arg3 cmax10  ; set arg0 "-c4" ; set arg2 "-v50+25+10+5"}
if { $Ptype == 6 } {append arg3 cmax00  ; set arg0 "-c4" ; set arg2 "-v50+25+10+5"}
if { $Ptype == 7 } {append arg3 prob50}
if { $Ptype == 8 } {append arg3 prob75}
if { $Ptype == 9 } {append arg3 prob90}
if { $Ptype == 10 } {append arg3 prob95}

set arg1 -a  ; append arg1 $Igis
set arg4 -o  ; append arg4 $out_file
set arg5 -j  ; append arg5 $Map_file
set arg6 -m  ; append arg6 $Map_proj
set arg7 -f  ; append arg7 $Frame
set arg8 -k  ; append arg8 $Color
set arg9 -z  ; append arg9 $Zoom

set cdump [string range $arg3 2 end]
if [file exists $cdump] {
    if { $PyPreferred } {
        set arg_ext " "
        if { $View == 1 } { append arg_ext " --interactive" }
        if { $PyDebug } { append arg_ext " --debug" }
        if { $PySource_time_zone } { append arg_ext " --source-time-zone" }

        switch -nocase $PyStreet_map {
            STAMEN_TERRAIN { append arg_ext " --street-map=0" }
            STAMEN_TONER { append arg_ext " --street-map=1" }
            default { }
        }

        run_python_program "$exec_dir/concplot.py" "$arg_ext \
                        $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 \
                        $arg0 $arg1 $arg2"
    } else {
        if { "$tcl_platform(platform)" == "unix" } {
            if { "$X_dir" == "" } {
                exec $exec_dir/concplot \
                        $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 \
                        $arg0 $arg1 $arg2
            } else {
                exec $X_dir/xterm -fn fixed -e $exec_dir/concplot \
                        $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 \
                        $arg0 $arg1 $arg2
            }
        } else {
            if [catch {
                exec $exec_dir/concplot.exe \
                        $arg3 $arg4 $arg5 $arg6 $arg7 $arg8 $arg9 \
                        $arg0 $arg1 $arg2} result] {
                msg_box "ERROR: concentration display file not created!"
            }
        }
    }
} else {
    msg_box "ERROR: concentration dump file not found!"
}

if [file exists LABELS.CFG] {file delete -force LABELS.CFG}
if { !$PyPreferred && $View == 1 } {ps_box $out_file} 
}


#------------------------------------------------------------------------------
# set initial defaults

proc set_defaultp {} {

global Zoom Color Ptype 
global Psout_file maps_dir Map_file Map_proj Frame Igis View
global PyDebug PySource_time_zone PyStreet_map PyOutput_format

set Igis 0
set View 1
set Psout_file probplot

if [ info exists Ptype ] { } else {set Ptype ""}

if {$Ptype == ""} {
   set Ptype 10 
   if {$Map_file == ""} {set Map_file ${maps_dir}/arlmap}
   set Map_proj 0
   set Num_polid 1
   set Zoom 50
   set Color 1
   set Frame 0
   set PyDebug false
   set PySource_time_zone false
   set PyStreet_map NOT_USED
   set PyOutput_format pdf
   }
}
